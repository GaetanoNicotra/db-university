1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT `students`.`name`, `students`.`surname`,`students`.`id`
FROM `students`
JOIN `degrees`
ON `degrees`.`id` = `students`.`degree_id`
WHERE `degrees`.`name` = 'Corso di Laurea in Economia';


2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze

SELECT  `degrees`.`level`, `degrees`.`name`, `degrees`.`id`
FROM `degrees`
JOIN `departments`
ON `degrees`.`department_id`= `departments`.`id`
WHERE `degrees`.`level` = 'magistrale'
AND `departments`.`name` = 'Dipartimento di Neuroscienze';


3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT *
FROM courses
JOIN course_teacher 
ON courses.id = course_teacher.course_id
JOIN teachers 
ON course_teacher.teacher_id = teachers.id
WHERE teachers.id = 44;


4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome

SELECT * , `degrees`.`name`, `departments`.`name`
FROM `students`
JOIN `degrees`
ON `students`.`degree_id` = `degrees`.`id` 
JOIN `departments`
ON `degrees`.`department_id` = `departments`.`id`
ORDER BY `students`.`surname`, `students`.`name`;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT `degrees`.`name` AS'nome_corso', `courses`.`name` AS 'nome_materia', `teachers`.`name` AS 'nome_insegnate'
FROM `degrees`
JOIN `courses`
ON `degrees`.`id` = `courses`.`degree_id`
JOIN `course_teacher`
ON `courses`.`id` = `course_teacher`.`course_id`
JOIN `teachers`
ON `teachers`.`id`=`course_teacher`.`teacher_id`


6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)

SELECT DISTINCT teachers.*
FROM teachers
JOIN course_teacher ON teachers.id = course_teacher.teacher_id
JOIN courses ON courses.id = course_teacher.course_id
JOIN degrees ON degrees.id = courses.degree_id
JOIN departments ON departments.id = degrees.department_id
WHERE departments.name = 'Dipartimento di Matematica'


7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente, filtrare 
i tentativi con voto minimo 18

SELECT students.id , students.name, students.surname, courses.name AS 'course_name'
COUNT (exam_student.vote) AS 'tentativi', MAX(exam_student.vote) AS 'voto_max'
FROM students
JOIN exam_student ON students.id = exam_student.student_id
JOIN exam ON exams.id = exam_student.exam_id
JOIN courses ON course.id = exams.course_id
GROUP BY students.id , courses.id
HAVING voto_max >= 18